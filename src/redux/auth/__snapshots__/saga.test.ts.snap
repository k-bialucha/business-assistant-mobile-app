// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`auth/saga loginSaga handles successful login 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      1000,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`auth/saga loginSaga handles successful login 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "some@email.com",
      "strong-password",
    ],
    "context": Object {
      "createUserWithEmailAndPassword": [MockFunction],
      "sendPasswordResetEmail": [MockFunction],
      "signInWithCredential": [MockFunction],
      "signInWithEmailAndPassword": [MockFunction],
    },
    "fn": [MockFunction],
  },
  "type": "CALL",
}
`;

exports[`auth/saga loginSaga handles unsuccessful login 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      1000,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`auth/saga loginSaga handles unsuccessful login 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "some@email.com",
      "badpass",
    ],
    "context": Object {
      "createUserWithEmailAndPassword": [MockFunction],
      "sendPasswordResetEmail": [MockFunction],
      "signInWithCredential": [MockFunction],
      "signInWithEmailAndPassword": [MockFunction],
    },
    "fn": [MockFunction],
  },
  "type": "CALL",
}
`;

exports[`auth/saga loginWithFacebookSaga handles successful signup through facebook 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      Object {
        "appId": "facebook-app-id",
        "appName": "Personal Business Assistant",
      },
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`auth/saga loginWithFacebookSaga handles successful signup through facebook 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      Object {
        "permissions": Array [
          "public_profile",
          "email",
        ],
      },
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`auth/saga loginWithFacebookSaga handles successful signup through facebook 3`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "mocked-token",
    ],
    "context": null,
    "fn": [MockFunction],
  },
  "type": "CALL",
}
`;

exports[`auth/saga loginWithFacebookSaga handles successful signup through facebook 4`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      Object {
        "idToken": "mocked-id-token",
        "providerId": "mocked-provider-id",
        "signInMethod": "signin-method",
      },
    ],
    "context": Object {
      "createUserWithEmailAndPassword": [MockFunction],
      "sendPasswordResetEmail": [MockFunction],
      "signInWithCredential": [MockFunction],
      "signInWithEmailAndPassword": [MockFunction],
    },
    "fn": [MockFunction],
  },
  "type": "CALL",
}
`;

exports[`auth/saga loginWithGoogleSaga handles successful signup through google 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      Object {
        "androidClientId": undefined,
        "iosClientId": undefined,
        "scopes": Array [
          "profile",
          "email",
        ],
      },
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`auth/saga loginWithGoogleSaga handles successful signup through google 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "mocked-id-token",
      "mocked-token",
    ],
    "context": null,
    "fn": [MockFunction],
  },
  "type": "CALL",
}
`;

exports[`auth/saga loginWithGoogleSaga handles successful signup through google 3`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      Object {
        "accessToken": "mocked-token",
        "idToken": "mocked-id-token",
        "type": "",
      },
    ],
    "context": Object {
      "createUserWithEmailAndPassword": [MockFunction],
      "sendPasswordResetEmail": [MockFunction],
      "signInWithCredential": [MockFunction],
      "signInWithEmailAndPassword": [MockFunction],
    },
    "fn": [MockFunction],
  },
  "type": "CALL",
}
`;

exports[`auth/saga resetPasswordSaga handles successful sending reset password form 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "some@email.com",
    ],
    "context": Object {
      "createUserWithEmailAndPassword": [MockFunction],
      "sendPasswordResetEmail": [MockFunction],
      "signInWithCredential": [MockFunction],
      "signInWithEmailAndPassword": [MockFunction],
    },
    "fn": [MockFunction],
  },
  "type": "CALL",
}
`;

exports[`auth/saga signupSaga handles successful signup 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      1000,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`auth/saga signupSaga handles successful signup 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "some@email.com",
      "strong-password",
    ],
    "context": Object {
      "createUserWithEmailAndPassword": [MockFunction],
      "sendPasswordResetEmail": [MockFunction],
      "signInWithCredential": [MockFunction],
      "signInWithEmailAndPassword": [MockFunction],
    },
    "fn": [MockFunction],
  },
  "type": "CALL",
}
`;

exports[`auth/saga signupSaga handles unsuccessful signup 1`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      1000,
    ],
    "context": null,
    "fn": [Function],
  },
  "type": "CALL",
}
`;

exports[`auth/saga signupSaga handles unsuccessful signup 2`] = `
Object {
  "@@redux-saga/IO": true,
  "combinator": false,
  "payload": Object {
    "args": Array [
      "some@email.com",
      "badpass",
    ],
    "context": Object {
      "createUserWithEmailAndPassword": [MockFunction],
      "sendPasswordResetEmail": [MockFunction],
      "signInWithCredential": [MockFunction],
      "signInWithEmailAndPassword": [MockFunction],
    },
    "fn": [MockFunction],
  },
  "type": "CALL",
}
`;
